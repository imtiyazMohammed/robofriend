{"version":3,"sources":["components/card.js","components/cardlist.js","components/searchbox.js","components/scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","Cardlist","robots","cardcomponent","map","user","i","Searchbox","searchchange","type","placeholder","onChange","Scrool","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onserachchange","event","searchfield","target","value","fetch","then","responce","json","users","filteredrobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAeeA,EAbF,SAACC,GACV,IAAOC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,GAClB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,cACnB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAjBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACbC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OACY,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOjB,OACI,gCACKH,EADL,QCAOI,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKtB,EAAMuB,YCgBJC,G,6DAlBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAW,GAHA,E,qDAOnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,kDAEJG,KAAK7B,MAAMuB,a,GAfCQ,cCgDZC,E,kDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAbxC,EAAKZ,MAAO,CACRjB,OAAO,GACP2B,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAQ,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAOxC,WACI,MAA6Bb,KAAKJ,MAA3BjB,EAAP,EAAOA,OAAO2B,EAAd,EAAcA,YACRQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAItC,EAAOwC,OAKH,sBAAK5C,UAAY,KAAjB,UACI,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAT3B,oBAAIvC,UAAU,QAAd,yB,GAzBD6C,IAAMlB,WCITmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe796ee2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props)=>{\r\n    const {name,email,id} = props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pad3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robo' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card'\r\n\r\nconst Cardlist = ({robots}) =>{\r\nconst cardcomponent = robots.map((user,i)=>{\r\n    return (\r\n                <Card \r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}/>\r\n            );\r\n})\r\n\r\n    return(\r\n        <div>\r\n            {cardcomponent};\r\n       </div>\r\n    )\r\n}\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox = ({searchchange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchchange} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scrool = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'3px solid black',height:'550px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scrool;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>that is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport Cardlist from '../components/cardlist';\r\nimport Searchbox from '../components/searchbox';\r\nimport Scroll from '../components/scroll'\r\nimport 'tachyons';\r\nimport './App.css'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(responce=>responce.json())\r\n        .then(users=>{this.setState({robots:users})});\r\n    }\r\n\r\n    onserachchange = (event) => {\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n    \r\n    render() {\r\n        const {robots,searchfield} = this.state;\r\n        const filteredrobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(!robots.length){\r\n            return <h1 className='f2 tc'>LOADING</h1>;\r\n        }\r\n        else{\r\n            return(\r\n                <div className = 'tc'>\r\n                    <h1 className='f1'>RoboFriend</h1>\r\n                    <Searchbox searchchange={this.onserachchange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <Cardlist robots={filteredrobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }   \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}